""" EE 250L Lab 02: GrovePi Sensors

Grishma Shukla & Le Duong

https://github.com/usc-ee250-fall2024/lab-02-grovepi-sensors-grish-ma/tree/master/ee250/lab02
"""

"""python3 interpreters in Ubuntu (and other linux distros) will look in a 
default set of directories for modules when a program tries to `import` one. 
Examples of some default directories are (but not limited to):
  /usr/lib/python3.5
  /usr/local/lib/python3.5/dist-packages

The `sys` module, however, is a builtin that is written in and compiled in C for
performance. Because of this, you will not find this in the default directories.
"""
import sys
import time
# By appending the folder of all the GrovePi libraries to the system path here,
# we are successfully `import grovepi`
sys.path.append('../../Software/Python/')
# This append is to support importing the LCD library.
sys.path.append('../../Software/Python/grove_rgb_lcd')

import grovepi
from grove_rgb_lcd import *

"""This if-statement checks if you are running this python file directly. That 
is, if you run `python3 grovepi_sensors.py` in terminal, this if-statement will 
be true"""
if __name__ == '__main__':
    potentiometer = 0
    PORT = 4    # D4
    grovepi.pinMode(potentiometer, "INPUT")
    time.sleep(1)

    prev_distance = 0
    prev_thresh = 0
  
    while True:
        threshhold = int((grovepi.analogRead(potentiometer))/1.98) #Port A0
        distance = str(grovepi.ultrasonicRead(PORT))
        #threshhold = 20
        #print(str(threshhold) + "cm")
        if (threshhold != prev_thresh):
          setText(str(threshhold) + "cm\n "+ distance + "cm")
      
        if grovepi.ultrasonicRead(PORT) < threshhold:
            #print(str(threshhold) + "cm OBJ PRES")
            if (prev_distance != distance):
              setText(str(threshhold) + "cm OBJ PRES\n "+ distance + "cm")
            # setText_norefresh(" OBJ PRES\n "+ distance + "cm")
        # else:
        #     #print(str(threshhold) + "cm")
        #     setText_norefresh(str(threshhold) + "cm\n "+ distance + "cm")

        #So we do not poll the sensors too quickly which may introduce noise,
        #sleep for a reasonable time of 200ms between each iteration.
        prev_thresh = threshhold
        prev_distance = distance
        time.sleep(0.2)

        print(grovepi.ultrasonicRead(PORT))
